REM PRG4_DEMANDA (CONTROL: CUARTO CONTROL 1)
REM CONTROL DE DEMANDA PLENUMS
REM AUTHOR CARLOS JIMENEZ HIRASHI @cjhirashi
REM VERSION 1.0.0

REM DECLARACION DE VARIABLES DEL SISTEMA

	REM *VARIABLES: Contadores del sistema
		LOCALS TM, T_VG, T_VM, T_VC, T_VGR, T_VCR
	
		TM = 1 / SCANS
		T_VG = T_VG + TM
		T_VM = T_VM + TM
		T_VC = T_VC + TM
		T_VGR = T_VGR + TM
		T_VCR = T_VCR + TM
	
	REM *VARIABLES: Parámetros de operación
		LOCALS SS_CP,
		LOCALS L_MAX, L_MIN

		SS_CP = BV1
		L_MAX = 100
		L_MIN = 6

	REM *VARIABLES: Parámetros para algoritmo de demanda
		LOCALS PERM_VG, PERM_VM, PERM_VC, PERM_VGR, PERM_VCR
		LOCALS Q_VG, Q_VM, Q_VC, Q_VGR, Q_VCR
		LOCALS SP_Q_VG, SP_Q_VM, SP_Q_VC, SP_Q_VGR, SP_Q_VCR
		LOCALS P_VG, P_VM, P_VC, P_VGR, P_VCR
		LOCALS I_VG, I_VM, I_VC, I_VGR, I_VCR
		LOCALS ERR_VG, ERR_VM, ERR_VC, ERR_VGR, ERR_VCR
		LOCALS PR_VG, PR_VM, PR_VC, PR_VGR, PR_VCR
		LOCALS IR_VG, IR_VM, IR_VC, IR_VGR, IR_VCR
		LOCALS IS_VG, IS_VM, IS_VC, IS_VGR, IS_VCR
		LOCALS DM_VG, DM_VM, DM_VC, DM_VGR, DM_VCR

REM LOGICA DE CONTROL
	
	REM *ALGORITMOS PARA CONTROL DE DEMANDA 

		REM **PI CAJA GRANDE
			PERM_VG = BV9
			Q_VG = AV98
			SP_Q_VG = AV107
			P_VG = AV69
			I_VG = AV70

			IF SS_CP = 1 AND PERM_VG = 1 THEN

				REM **ERROR DEL SISTEMA
					ERR_VG = ( Q_VG - SP_Q_VG ) * -1

				REM **RESULTANTE PROPORCIONAL
					PR_VG = ( ERR_VG / ( SP_Q_VG * P_VG )) * 100

				REM **RESULTANTE INTEGRAL
					IR_VG = (( 100 * ERR_VG ) / SP_Q_VG ) * I_VG
					IF T_VG > 1 THEN IS_VG = IS_VG + IR_VG, T_VG = 0
					IS_VG = MAX( L_MIN - 10, MIN( L_MAX + 10, IS_VG ))

				REM **DEMANDA DE SISTEMA
					DM_VG = PR_VG + IS_VG
					DM_VG = MAX( L_MIN , MIN( L_MAX, DM_VG ))

			  ELSE

				PR_VG = 0, IR_VG = 0, IS_VG = 0, DM_VG = 0

			ENDIF

			AV82 = DM_VG

		REM **PI CAJA MEDIANA
			PERM_VM = BV10
			Q_VM = AV99
			SP_Q_VM = AV108
			P_VM = AV71
			I_VM = AV72

			IF SS_CP = 1 AND PERM_VM = 1 THEN

				REM **ERROR DEL SISTEMA
					ERR_VM = ( Q_VM - SP_Q_VM ) * -1

				REM **RESULTANTE PROPORCIONAL
					PR_VM = ( ERR_VM / ( SP_Q_VM * P_VM )) * 100

				REM **RESULTANTE INTEGRAL
					IR_VM = (( 100 * ERR_VM ) / SP_Q_VM ) * I_VM
					IF T_VM > 1 THEN IS_VM = IS_VM + IR_VM, T_VM = 0
					IS_VM = MAX( L_MIN - 10, MIN( L_MAX + 10, IS_VM ))

				REM **DEMANDA DE SISTEMA
					DM_VM = PR_VM + IS_VM
					DM_VM = MAX( L_MIN , MIN( L_MAX, DM_VM ))

			  ELSE

				PR_VM = 0, IR_VM = 0, IS_VM = 0, DM_VM = 0

			ENDIF

			AV83 = DM_VM

		REM **PI CAJA CHICA
			PERM_VC = BV11
			Q_VC = AV100
			SP_Q_VC = AV109
			P_VC = AV73
			I_VC = AV74

			IF SS_CP = 1 AND PERM_VC = 1 THEN

				REM **ERROR DEL SISTEMA
					ERR_VC = ( Q_VC - SP_Q_VC ) * -1

				REM **RESULTANTE PROPORCIONAL
					PR_VC = ( ERR_VC / ( SP_Q_VC * P_VC )) * 100

				REM **RESULTANTE INTEGRAL
					IR_VC = (( 100 * ERR_VC ) / SP_Q_VC ) * I_VC
					IF T_VC > 1 THEN IS_VC = IS_VC + IR_VC, T_VC = 0
					IS_VC = MAX( L_MIN - 10, MIN( L_MAX + 10, IS_VC ))

				REM **DEMANDA DE SISTEMA
					DM_VC = PR_VC + IS_VC
					DM_VC = MAX( L_MIN , MIN( L_MAX, DM_VC ))

			ELSE

				PR_VC = 0, IR_VC = 0, IS_VC = 0, DM_VC = 0

			ENDIF

			AV84 = DM_VC

		REM **PI CAJA GRANDE RETORNO
			PERM_VGR = BV35
			Q_VGR = AV102
			SP_Q_VGR = AV110
			P_VGR = AV69
			I_VGR = AV70

			IF SS_CP = 1 AND PERM_VGR = 1 THEN

				REM **ERROR DEL SISTEMA
					ERR_VGR = ( Q_VGR - SP_Q_VGR ) * -1

				REM **RESULTANTE PROPORCIONAL
					PR_VGR = ( ERR_VGR / ( SP_Q_VGR * P_VGR )) * 100

				REM **RESULTANTE INTEGRAL
					IR_VGR = (( 100 * ERR_VGR ) / SP_Q_VGR ) * I_VGR
					IF T_VGR > 1 THEN IS_VGR = IS_VGR + IR_VGR, T_VGR = 0
					IS_VGR = MAX( L_MIN - 10, MIN( L_MAX + 10, IS_VGR ))

				REM **DEMANDA DE SISTEMA
					DM_VGR = PR_VGR + IS_VGR
					DM_VGR = MAX( L_MIN , MIN( L_MAX, DM_VGR ))

			ELSE

				PR_VGR = 0, IR_VGR = 0, IS_VGR = 0, DM_VGR = 0

			ENDIF

			AV80 = DM_VGR

		REM **PI CAJA CHICA RETORNO
			PERM_VCR = BV36
			Q_VCR = AV103
			SP_Q_VCR = AV111
			P_VCR = AV73
			I_VCR = AV74

			IF SS_CP = 1 AND PERM_VCR = 1 THEN

				REM **ERROR DEL SISTEMA
					ERR_VCR = ( Q_VCR - SP_Q_VCR ) * -1

				REM **RESULTANTE PROPORCIONAL
					PR_VCR = ( ERR_VCR / ( SP_Q_VCR * P_VCR )) * 100

				REM **RESULTANTE INTEGRAL
					IR_VCR = (( 100 * ERR_VCR ) / SP_Q_VCR ) * I_VCR
					IF T_VCR > 1 THEN IS_VCR = IS_VCR + IR_VCR, T_VCR = 0
					IS_VCR = MAX( L_MIN - 10, MIN( L_MAX + 10, IS_VCR ))

				REM **DEMANDA DE SISTEMA
					DM_VCR = PR_VCR + IS_VCR
					DM_VCR = MAX( L_MIN , MIN( L_MAX, DM_VCR ))

			ELSE

				PR_VCR = 0, IR_VCR = 0, IS_VCR = 0, DM_VCR = 0

			ENDIF

			AV81 = DM_VCR

REM PERMISIVO DE OPERACION ACTIVO

	REM CAJAS VAV
		IF PERM_VG = 0 AND PERM_VM = 0 AND PERM_VC = 0 THEN BV9@8 = 1

	REM CAJAS VAV RETORNO
		IF PERM_VGR = 0 AND PERM_VCR = 0 THEN BV35@8 = 1
	 

END